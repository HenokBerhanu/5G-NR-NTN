################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

#### This file is a jinja2 template all the values between double curly brace will be replaced with environment variables

AMF =
{
  INSTANCE_ID = 0 ;            # 0 is the default
  PID_DIRECTORY = "/var/run";   # /var/run is the default

  AMF_NAME = "OAI-AMF";
  LOG_LEVEL = "debug";

  RELATIVE_CAPACITY = 30;
  # Display statistics about whole system (in seconds)
  STATISTICS_TIMER_INTERVAL = 20;

  CORE_CONFIGURATION:
  {
    EMERGENCY_SUPPORT = "false";
  };

  GUAMI:
  {
    MCC = ""; MNC = ""; RegionID = ""; AMFSetID = ""; AMFPointer = "1"
  }

  SERVED_GUAMI_LIST = (
    {MCC = ""; MNC = ""; RegionID = ""; AMFSetID = ""; AMFPointer = "0"}
    #48bits <MCC><MNC><RegionID><AMFSetID><AMFPointer>
  );

  PLMN_SUPPORT_LIST = ({
    MCC = ""; MNC = ""; TAC = ;
    SLICE_SUPPORT_LIST = (
      {SST = ; SD = "0xFFFFFF"}
      
      
     )
  });

  INTERFACES:
  {
    # AMF binded interface for N1/N2 interface (NGAP)
    NGAP_AMF:
    {
      INTERFACE_NAME = "";
      IPV4_ADDRESS   = "read";
      PORT           = 38412;
      PPID           = 60;
    };

    # AMF binded interface for SBI (N11 (SMF)/N12 (AUSF), etc.)
    SBI:
    {
      INTERFACE_NAME = "";
      IPV4_ADDRESS   = "read";
      # default is 80
      PORT           = 80;
      # default is v1
      API_VERSION    = "v1";
      # default is 8080
      HTTP2_PORT     = 8080;

      SMF_INSTANCES_POOL = (
        {SMF_INSTANCE_ID = 1; IPV4_ADDRESS = "0.0.0.0"; PORT = "80"; HTTP2_PORT = 8080, VERSION = "v1"; FQDN = "localhost", SELECTED = ""}
      );
    };

    NRF :
    {
      IPV4_ADDRESS = "0.0.0.0";
      PORT         = 80;            # Default: 80
      API_VERSION  = "v1";
      FQDN         = "localhost"
    };

    AUSF :
    {
      IPV4_ADDRESS = "0.0.0.0";
      PORT         = 80;            # Default: 80
      API_VERSION  = "v1";
      FQDN         = "localhost"
    };

    UDM :
    {
      IPV4_ADDRESS = "0.0.0.0";
      PORT         = 80;    # Default: 80
      API_VERSION  = "v2";
      FQDN         = "localhost"
    };

    NSSF :
    {
      IPV4_ADDRESS = "0.0.0.0";
      PORT         = 80;            # Default: 80
      API_VERSION  = "v2";
      FQDN         = "oai-nssf"
    };

  };

  SUPPORT_FEATURES:
  {
     # STRING, {"yes", "no"},
     NF_REGISTRATION = "no";  # Set to yes if AMF registers to an NRF
     NRF_SELECTION   = "no";    # Set to yes to enable NRF discovery and selection
     EXTERNAL_NRF    = "no";     # Set to yes if AMF works with an external NRF
     SMF_SELECTION   = "no";    # Set to yes to enable SMF discovery and selection
     EXTERNAL_AUSF   = "no";    # Set to yes if AMF works with an external AUSF
     EXTERNAL_UDM    = "no";     # Set to yes if AMF works with an external UDM
     EXTERNAL_NSSF   = "no";    # Set to yes if AMF works with an external NSSF
     USE_FQDN_DNS    = "no";   # Set to yes if AMF relies on a DNS to resolve NRF/SMF/UDM/AUSF's FQDN
     USE_HTTP2       = "no";        # Set to yes to enable HTTP2 for AMF server
  }

  AUTHENTICATION:
  {
    ## MySQL mandatory options
    MYSQL_server = "mysql"; # MySQL Server address
    MYSQL_user   = "test";   # Database server login
    MYSQL_pass   = "test";   # Database server password
    MYSQL_db     = "oai_db";     # Your database name
    RANDOM = "true";
  };

  NAS:
  {
    ORDERED_SUPPORTED_INTEGRITY_ALGORITHM_LIST = ["NIA0", "NIA1", "NIA2"] ;
    ORDERED_SUPPORTED_CIPHERING_ALGORITHM_LIST = ["NEA0", "NEA1", "NEA2"] ;
  };
};